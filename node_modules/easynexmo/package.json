{
  "name": "easynexmo",
  "author": {
    "name": "Prabhu Velayutham"
  },
  "version": "0.4.1",
  "main": "lib/nexmo",
  "keywords": [
    "sms",
    "nexmo"
  ],
  "homepage": "https://github.com/pvela/nexmo",
  "repository": {
    "type": "git",
    "url": "git://github.com/pvela/nexmo.git"
  },
  "description": "A nodejs wrapper for nexmo API to send SMS",
  "contributors": [
    {
      "name": "pvela"
    },
    {
      "name": "akuzi"
    },
    {
      "name": "bpilot"
    },
    {
      "name": "justinfreitag"
    }
  ],
  "readme": "[![build status](https://secure.travis-ci.org/pvela/nexmo.png)](http://travis-ci.org/pvela/nexmo)\nA nodejs wrapper for nexmo (http://nexmo.com/) API to send SMS\n\nInstallation Instructions : \n===========================\n\nDownload and Install lib/nexmo.js in your lib \n\nor \n\nuse \"npm install easynexmo -g\"\n\nUsage :\n=======\n\nvar nexmo = require('./lib/nexmo');\n\nnexmo.initialize(KEY,SECRET,API_PROTOCOL,DEBUG);\n\nKEY - API Key from Nexmo\n\nSECRET - API SECRET from Nexmo\n\nAPI_PROTOCOL - http or https\n\nDEBUG - set this to true to debug library calls\n\nList of API's supported by the library.\n=======================================\n\n###Send a text message\n\n\tnexmo.sendTextMessage(sender,recipient,message,opts,callback)\n\n###Send a Binary Message\n\n\tnexmo.sendBinaryMessage(fromnumber, tonumber,body, udh, callback);\n\nbody - Hex encoded binary data\nudh - Hex encoded udh\n\n###Send a WAP Push Message\n\n\tnexmo.sendWapPushMessage(fromnumber,tonumber,title,url,validity,callback);\n\nvalidity is optional if given should be in milliseconds.\n\n###Check Account Balance \n\tnexmo.checkBalance(callback);\n\n###Get Pricing for sending message to a country.\n\n\tnexmo.getPricing(countryCode,callback);\n\ncountryCode - 2 letter ISO Country Code\n\n###Get all numbers associated to the account.\n\n\tnexmo.getNumbers(callback);\n\n###Search for MSISDN's available to purchase.\n\n\tnexmo.searchNumbers(countryCode,pattern,callback);\n\npattern is optional, pass numbers to match in the search\n\n###Change Password (API Secret)\n\n\tnexmo.changePassword(<NEW_PASSWORD>,callback);\n\n###Change Callback URL associated to the account\n\n\tnexmo.changeMoCallbackUrl(<NEW_CALLBACK_URL>,callback);\n\n###Change Delivery Receipt URL associated to the account\n\n\tnexmo.changeDrCallbackUrl(<NEW_DR_CALLBACK_URL>,callback);\n\n###Send TTS Message\n\t\n\tnexmo.sendTTSMessage = function(<TO_NUMBER>,message,options,callback);\n\n###Send TTS Prompt With Capture\t\n\n\tnexmo.sendTTSPromptWithCapture(<TO_NUMBER>,message,<MAX_DIGITS>, <BYE_TEXT>,options,callback);\n\n###Send TTS Prompt With Confirm\n\n\tnexmo.sendTTSPromptWithConfirm(<TO_NUMBER>, message ,<MAX_DIGITS>,'<PIN_CODE>',<BYE_TEXT>,<FAILED_TEXT>,options,callback);\n\n###Make a voice call\n\n\tnexmo.call(<TO_NUMBER>,<ANSWER_URL>,options,callback);\n\n\nCallback\n========\n\nCallback from all API calls returns 2 parameters - error and a json object.\n\nAn example callback function :\n\n\tfunction consolelog (err,messageResponse) {\n           if (err) {\n                console.log(err);\n           } else {\n                console.dir(messageResponse);\n           }\n\t}\n\nRefer here http://nexmo.com/documentation/ to get the schema for the returned message response object.\n\nThe MIT License (MIT)\n=====================\n\nCopyright (c) 2011 Prabhu Velayutham\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pvela/nexmo/issues"
  },
  "_id": "easynexmo@0.4.1",
  "dist": {
    "shasum": "3690fa70f092675945ee1aca8dee311594a5b0eb"
  },
  "_from": "easynexmo@",
  "_resolved": "https://registry.npmjs.org/easynexmo/-/easynexmo-0.4.1.tgz"
}
